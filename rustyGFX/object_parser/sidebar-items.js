initSidebarItems({"fn":[["faces","function name: faces inputs: the name of the file as a string outputs: a vector of the Face struct description: this function takes in a filename it get the piece of the file related to face data it then parses that into a vector of Face structs"],["fileSection","function name: fileSection inputs: name of file as string, token to look for as start of line in the file outputs: a vector of strings that are the lines in the file related to the token description: this function gets all of the lines of a file that start with the token passed to it."],["getObjectFileName","function name: getObjectFileName inputs: the index into the list of names as usize outputs: the string that is the file name description: this function reads in the file that contains the names of the object files and then returns the one at the index or modulus of the index to avoid out of bounds"],["normals","function name: normals inputs: the file name as a string outputs: a vector of Normal structs description: this function gets the normal data from a file and reorders it by index for openGL"],["posTex","function name: posTex inputs: positions as a vector of Vertex structs, texels as a vector of Texture structs outputs: a vector of PosTex structs description: this function combines the position and texture data into a single list of data"],["positions","function name: positions inputs: the name of the file as a string outputs: a vector of Vertex structs description: this function takes in a file name it runs vertices and faces to get vectors of vertices and faces and uses those to create a new ordering for the vertices that is acceptable for openGL to use in rendering"],["texels","function name: texels inputs: the file name as a string outputs: a vector of Textures description: this function gets and reorders the textures based on the face data so that they can be used by openGL"],["unmodifiedNormals","function name: unmodifiedNormals inputs: the name of the file to parse as a string outputs: a vector of the Normal struct description: this function takes the piece of a file related to normals and parses it into a vector of normal structs"],["unmodifiedTextures","function name: unmodifiedTextures input: name of the file as a string output: a vector of the Texture struct description: this function takes a file name gets the section of that file related to texture data parses that into Texture structures adds those to a vector and returns that"],["vertices","function name: vertices inputs: the file name as a string outputs: a vector of Vertex structures description: this function takes the name of a file gets the section of the file related to vertices and parses that section into a series of Vertex structures that"]],"mod":[["mat","Copyright <2018>  the following definitions are influenced by the glium examples since they are the format needed for glium  they are not an exact match to the structs used in the glium examples but are a re-partioning of the structs used  so all credit goes to them.  [This program is licensed under the \"Apache Licence\"]  Please see the file LICENSE in the source distribution of this software for license terms.  this file contains the structs used in the program to make the math in the program make more sense."]],"struct":[["Model","struct name: Model description: this struct is designed to hold the meta data about a model being used by the program it holds the number of vertices, positions, texels, normals, and faces of the model"]]});